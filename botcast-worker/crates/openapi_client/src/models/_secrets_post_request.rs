/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecretsPostRequest {
    #[serde(rename = "news", skip_serializing_if = "Option::is_none")]
    pub news: Option<Vec<models::SecretsPostRequestNewsInner>>,
    #[serde(rename = "deletionIds", skip_serializing_if = "Option::is_none")]
    pub deletion_ids: Option<Vec<String>>,
}

impl SecretsPostRequest {
    pub fn new() -> SecretsPostRequest {
        SecretsPostRequest {
            news: None,
            deletion_ids: None,
        }
    }
}

