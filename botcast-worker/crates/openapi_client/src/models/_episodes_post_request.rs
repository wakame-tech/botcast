/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EpisodesPostRequest {
    #[serde(rename = "podcast_id")]
    pub podcast_id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "sections", skip_serializing_if = "Option::is_none")]
    pub sections: Option<Vec<models::Section>>,
}

impl EpisodesPostRequest {
    pub fn new(podcast_id: String, title: String) -> EpisodesPostRequest {
        EpisodesPostRequest {
            podcast_id,
            title,
            description: None,
            sections: None,
        }
    }
}

