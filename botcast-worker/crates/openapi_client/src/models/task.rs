/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Task {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "status")]
    pub status: models::TaskStatus,
    #[serde(rename = "args")]
    pub args: std::collections::HashMap<String, serde_json::Value>,
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<uuid::Uuid>,
    #[serde(rename = "execute_after")]
    pub execute_after: String,
    #[serde(rename = "executed_at", skip_serializing_if = "Option::is_none")]
    pub executed_at: Option<String>,
    #[serde(rename = "executed_finished_at", skip_serializing_if = "Option::is_none")]
    pub executed_finished_at: Option<String>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "cron", skip_serializing_if = "Option::is_none")]
    pub cron: Option<String>,
}

impl Task {
    pub fn new(id: uuid::Uuid, status: models::TaskStatus, args: std::collections::HashMap<String, serde_json::Value>, execute_after: String) -> Task {
        Task {
            id,
            status,
            args,
            user_id: None,
            execute_after,
            executed_at: None,
            executed_finished_at: None,
            result: None,
            cron: None,
        }
    }
}

