/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mail {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "body")]
    pub body: std::collections::HashMap<String, serde_json::Value>,
    #[serde(rename = "user")]
    pub user: Box<models::User>,
    #[serde(rename = "corner")]
    pub corner: Box<models::Corner>,
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl Mail {
    pub fn new(id: uuid::Uuid, body: std::collections::HashMap<String, serde_json::Value>, user: models::User, corner: models::Corner, created_at: String) -> Mail {
        Mail {
            id,
            body,
            user: Box::new(user),
            corner: Box::new(corner),
            created_at,
        }
    }
}

