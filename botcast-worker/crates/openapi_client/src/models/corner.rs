/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Corner {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "requesting_mail", skip_serializing_if = "Option::is_none")]
    pub requesting_mail: Option<bool>,
    #[serde(rename = "mail_schema", skip_serializing_if = "Option::is_none")]
    pub mail_schema: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "user")]
    pub user: Box<models::User>,
}

impl Corner {
    pub fn new(id: uuid::Uuid, title: String, description: String, user: models::User) -> Corner {
        Corner {
            id,
            title,
            description,
            requesting_mail: None,
            mail_schema: None,
            user: Box::new(user),
        }
    }
}

