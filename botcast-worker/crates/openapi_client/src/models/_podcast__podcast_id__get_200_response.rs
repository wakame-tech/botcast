/*
 * botcast API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PodcastPodcastIdGet200Response {
    #[serde(rename = "podcast")]
    pub podcast: Box<models::Podcast>,
    #[serde(rename = "episodes")]
    pub episodes: Vec<models::Episode>,
    #[serde(rename = "corners")]
    pub corners: Vec<models::Corner>,
}

impl PodcastPodcastIdGet200Response {
    pub fn new(podcast: models::Podcast, episodes: Vec<models::Episode>, corners: Vec<models::Corner>) -> PodcastPodcastIdGet200Response {
        PodcastPodcastIdGet200Response {
            podcast: Box::new(podcast),
            episodes,
            corners,
        }
    }
}

