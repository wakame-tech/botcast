model Task {
  id                   String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status               TaskStatus
  args                 Json
  user                 User?      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id              String?    @db.Uuid
  executed_at          DateTime?  @db.Timestamptz(3)
  executed_finished_at DateTime?  @db.Timestamptz(3)
  result               Json?
  execute_after        DateTime   @default(now()) @db.Timestamptz(3)

  @@map("tasks")
}

enum TaskStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED

  @@map("task_status")
}
