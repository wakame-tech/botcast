/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/signIn": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Sign in */
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						/** Format: email */
						email: string;
						password: string;
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							accessToken: string;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/me": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["User"];
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/secrets": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Secret"][];
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						news?: {
							name: string;
							value: string;
						}[];
						deletionIds?: string[];
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/tasks": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Task"][];
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						/** Format: uuid */
						id: string;
						args: {
							[key: string]: unknown;
						};
						cron?: string;
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/tasks/{taskId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				taskId: string;
			};
			cookie?: never;
		};
		get?: never;
		put: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					taskId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						status: components["schemas"]["TaskStatus"];
						args: {
							[key: string]: unknown;
						};
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					taskId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/topPodcasts": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Podcast"][];
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/podcasts": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Podcast"][];
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						description: string;
						icon: string;
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/podcast/{podcastId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				podcastId: string;
			};
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					podcastId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							podcast: components["schemas"]["Podcast"];
							episodes: components["schemas"]["Episode"][];
							corners: components["schemas"]["Corner"][];
						};
					};
				};
			};
		};
		put: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					podcastId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						icon: string;
						description: string;
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					podcastId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/episodes": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						podcast_id: string;
						title: string;
						description?: string;
						sections?: components["schemas"]["Section"][];
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/episodes/{episodeId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				episodeId: string;
			};
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					episodeId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Episode"];
					};
				};
			};
		};
		put: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					episodeId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						description?: string;
						sections?: components["schemas"]["Section"][];
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					episodeId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/scripts": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Script"][];
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						description: string;
						template: {
							[key: string]: unknown;
						};
						arguments: {
							[key: string]: unknown;
						};
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/scripts/{scriptId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				scriptId: string;
			};
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					scriptId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Script"];
					};
				};
			};
		};
		put: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					scriptId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						description: string;
						template: {
							[key: string]: unknown;
						};
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					scriptId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/corners/{cornerId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				cornerId: string;
			};
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Corner"];
					};
				};
			};
		};
		put: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						title: string;
						description: string;
						mail_schema?: {
							[key: string]: unknown;
						};
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/corners/{cornerId}/mails": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				cornerId: string;
			};
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["Mail"][];
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
				};
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						body: {
							[key: string]: unknown;
						};
					};
				};
			};
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/corners/{cornerId}/mails/{mailId}": {
		parameters: {
			query?: never;
			header?: never;
			path: {
				cornerId: string;
				mailId: string;
			};
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					cornerId: string;
					mailId: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description OK */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content?: never;
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		Secret: {
			/** Format: uuid */
			id: string;
			name: string;
		};
		User: {
			/** Format: uuid */
			id: string;
			/** Format: uuid */
			auth_id: string;
			/** Format: email */
			email: string;
			name: string;
		};
		Podcast: {
			/** Format: uuid */
			id: string;
			title: string;
			icon: string;
			/** Format: date-time */
			created_at: string;
			description: string;
			user: components["schemas"]["User"];
		};
		Episode: {
			/** Format: uuid */
			id: string;
			title: string;
			sections: components["schemas"]["Section"][];
			audio_url?: string;
			srt_url?: string;
			/** Format: date-time */
			created_at: string;
			description: string;
			duration_sec?: number;
		};
		Corner: {
			/** Format: uuid */
			id: string;
			title: string;
			description: string;
			requesting_mail?: boolean;
			mail_schema?: {
				[key: string]: unknown;
			};
			user: components["schemas"]["User"];
		};
		SerifSection: {
			/** @enum {string} */
			type: "Serif";
			speaker: string;
			text: string;
		};
		AudioSection: {
			/** @enum {string} */
			type: "Audio";
			url: string;
			from?: number;
			to?: number;
		};
		Section:
			| components["schemas"]["SerifSection"]
			| components["schemas"]["AudioSection"];
		Script: {
			/** Format: uuid */
			id: string;
			template: {
				[key: string]: unknown;
			};
			title: string;
			description: string;
			arguments: {
				[key: string]: unknown;
			};
		};
		Mail: {
			/** Format: uuid */
			id: string;
			body: {
				[key: string]: unknown;
			};
			user: components["schemas"]["User"];
			corner: components["schemas"]["Corner"];
			/** Format: date-time */
			created_at: string;
		};
		Task: {
			/** Format: uuid */
			id: string;
			status: components["schemas"]["TaskStatus"];
			args: {
				[key: string]: unknown;
			};
			/** Format: uuid */
			user_id?: string;
			/** Format: date-time */
			execute_after: string;
			/** Format: date-time */
			executed_at?: string;
			/** Format: date-time */
			executed_finished_at?: string;
			result?: {
				[key: string]: unknown;
			};
			cron?: string;
		};
		/** @enum {string} */
		TaskStatus: "PENDING" | "RUNNING" | "COMPLETED" | "FAILED";
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
